digraph agent_workflow {

compound=true;
node [shape=Mrecord, style = filled, color="#6699ff", fillcolor="#ececff",
fontsize=10];
edge [fontsize=10];

subgraph cluster_Node { 
  label = "On the Node";
  style = filled color="#6699ff" fillcolor=lightgrey fontsize=12;
  gettools [ label = "Get Tools from Server" ];
  getpol [label = "Get Policies from Server" ];
  testcfd [label="Ensure CFEngine daemons running"];
  testcurl [label="Ensure curl installed"]
  getuuid [label = "Get UUID of Server" ];
  doinventory [label = "Do Inventory of Node"];
  dopolicy [label = "Apply Policies and generate Reports"];
  sendreport [label = "Send Reports to Rudder Server"];
  gettools -> getpol -> testcfd -> testcurl -> getuuid -> doinventory;
  doinventory -> dopolicy -> sendreport;
};

tools -> gettools [label="Answer"];
uuid -> getuuid [label="Answer"];
acceptsendpol -> getpol [label="For valid Nodes only"];
doinventory -> inventory [label="Send Inventory"];
sendreport -> logs [label="Send Reports"];

subgraph cluster_Server { 
  label = "On the Rudder Server";
  style = filled color="#6699ff" fillcolor=lightgrey  fontsize=12;
  
  subgraph cluster_AssetManagement {
    label = "Asset Management";
    
    inventory [label = "Incoming Inventory" fillcolor=yellow];

    subgraph cluster_ServerNodeState {
      label="Node State" fontsize=12;
      unknownnode [label = "Unknown"];
      pendingnode [label = "Pending"];
      validnode   [label = "Valid"];
      refusednode [label = "Refused"];
      pendingnode -> {validnode refusednode} [label="User Validation"];
      rank=same {unknownnode pendingnode};
      rank=same {refusednode validnode};
    };
 
    inventory -> {validnode refusednode pendingnode};

    subgraph cluster_ServerNodeChanges {
      label="Node Changes" fontsize=12;
      nodenew [label = "New"];
      nodechanged [label = "Changed"];
      nodeunchanged [label = "Unchanged"];
    };

    validnode -> {nodenew nodechanged nodeunchanged};
  
    subgraph cluster_ServerGeneric {
      label="Generic services" fontsize=12;
      uuid [label = "UUID" color="#6699ff", fillcolor=green];
      tools [label = "Tools" color="#6699ff", fillcolor=green];
    };

};

  subgraph cluster_ConfigManagement {
    label = "Configuration Management";

    subgraph cluster_PolicyDelivery {
      label="Policy Delivery" fontsize=12;
      preparepol [label = "Prepare Policies"];
      acceptsendpol    [label = "Policies ready to be sent" color="#6699ff", fillcolor=green];
      configchange [label = "Change Request"];
      {nodenew nodechanged configchange} -> preparepol;
      {preparepol nodeunchanged} -> acceptsendpol;
    };

    subgraph cluster_Compliance {
      label="Compliance" fontsize=12;
      logs [label = "Incoming Reports" fillcolor=yellow];
      compliance [label="Compliance"];
      logs -> compliance [label="Process reports"];
    };
  };

};

}
